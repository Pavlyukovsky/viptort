<?php

namespace app\controllers;

use app\models\Cake;
use Yii;
use app\models\CakesCategory;
use app\models\CakesCategorySearch;
use app\models\CakeSearch;
use yii\data\ActiveDataProvider;
use yii\data\ArrayDataProvider;
use yii\helpers\VarDumper;
use yii\web\Controller;
use yii\web\NotFoundHttpException;
use yii\filters\VerbFilter;

/**
 * CakesCategoryController implements the CRUD actions for CakesCategory model.
 */
class CakesCategoryController extends Controller
{
    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            'verbs' => [
                'class' => VerbFilter::className(),
                'actions' => [
                    'delete' => ['POST'],
                ],
            ],
        ];
    }

    public function beforeAction($action)
    {
        if($action->id != "view" && \Yii::$app->user->isGuest){
            $this->redirect(\Yii::$app->getHomeUrl());
        }
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    public function actionView($alias)
    {
        $this->layout = '@app/views/layouts/main-image.php';

        if(!$alias){
            throw new NotFoundHttpException();
        }

        $model = CakesCategory::find()->where(['alias' => $alias])->one();

        if(!$model || !$model instanceof CakesCategory){
            throw new NotFoundHttpException();
        }

        $dataProvider = new ActiveDataProvider([
            'query' => Cake::find()->where(['category_id' => $model->id]),
            'pagination' => [
                'pageSize' => 18,
            ],
            'sort' => ['defaultOrder' => ['created_at' => SORT_DESC]]
        ]);

        return $this->render('view', ['dataProvider' => $dataProvider, 'category' => $model]);
    }

    /**
     * Lists all CakesCategory models.
     * @return mixed
     */
    public function actionIndex()
    {
        $searchModel = new CakesCategorySearch();
        $dataProvider = $searchModel->search(Yii::$app->request->queryParams);

        return $this->render('index', [
            'searchModel' => $searchModel,
            'dataProvider' => $dataProvider,
        ]);
    }

    /**
     * Creates a new CakesCategory model.
     * If creation is successful, the browser will be redirected to the 'view' page.
     * @return mixed
     */
    public function actionCreate()
    {
        $model = new CakesCategory();

        $model->created_at = Yii::$app->formatter->asDatetime(time());
        $model->updated_at = Yii::$app->formatter->asDatetime(time());

        if ($model->load(Yii::$app->request->post()) && $model->save()) {
            return $this->redirect(['index']);
        } else {
            return $this->render('create', [
                'model' => $model,
            ]);
        }
    }

    /**
     * Updates an existing CakesCategory model.
     * If update is successful, the browser will be redirected to the 'view' page.
     * @param integer $id
     * @return mixed
     */
    public function actionUpdate($id)
    {
        $model = $this->findModel($id);

        $model->updated_at = Yii::$app->formatter->asDatetime(time());

        if ($model->load(Yii::$app->request->post()) && $model->save()) {
            return $this->redirect(['index']);
        } else {
            return $this->render('update', [
                'model' => $model,
            ]);
        }
    }

    /**
     * Deletes an existing CakesCategory model.
     * If deletion is successful, the browser will be redirected to the 'index' page.
     * @param integer $id
     * @return mixed
     */
    public function actionDelete($id)
    {
        $this->findModel($id)->delete();

        return $this->redirect(['index']);
    }

    /**
     * Finds the CakesCategory model based on its primary key value.
     * If the model is not found, a 404 HTTP exception will be thrown.
     * @param integer $id
     * @return CakesCategory the loaded model
     * @throws NotFoundHttpException if the model cannot be found
     */
    protected function findModel($id)
    {
        if (($model = CakesCategory::findOne($id)) !== null) {
            return $model;
        } else {
            throw new NotFoundHttpException('The requested page does not exist.');
        }
    }
}
